<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="today.meevote.domain.voting_schedule.dao.VotingScheduleDao">

    <select id="getVotingScheduleList">
        SELECT
            s.schedule_id,
            s.name,
            sc.category_name,
            sc.color,
            TO_CHAR(s.vote_deadline, 'YYYY-MM-DD HH24:MI') AS voteDeadline,
            s.is_group
        FROM
            member_schedule ms
            JOIN schedule s ON ms.schedule_id = s.schedule_id
            JOIN schedule_category sc ON s.schedule_category_id = sc.schedule_category_id
            LEFT JOIN schedule_place sp ON s.schedule_id = sp.schedule_id
        WHERE
            ms.email = #{email}
            AND s.is_group = 1
            AND sp.schedule_id IS NULL
        ORDER BY s.vote_deadline ASC
    </select>

    <select id="getVotingScheduleInfo">
        SELECT
            s.schedule_id,
            sc.schedule_category_id,
            sc.category_name,
            sc.color,
            s.name,
            s.description,
            TO_CHAR(s.start_date, 'YYYY-MM-DD HH24:MI') AS startDate,
            TO_CHAR(s.end_date, 'YYYY-MM-DD HH24:MI') AS endDate,
            TO_CHAR(s.vote_deadline, 'YYYY-MM-DD HH24:MI') AS voteDeadline
        FROM
            schedule s
            JOIN schedule_category sc ON s.schedule_category_id = sc.schedule_category_id
            LEFT JOIN schedule_place sp ON s.schedule_id = sp.schedule_id
        WHERE
            s.schedule_id = #{scheduleId}
            AND s.is_group = 1
            AND sp.schedule_id IS NULL
    </select>

    <select id="isExistMemberSchedule">
        SELECT COUNT(*)
        FROM member_schedule
        WHERE
            email = #{email}
          AND schedule_id = #{scheduleId}
    </select>

    <select id="isScheduleOwner">
        SELECT is_owner
        FROM member_schedule
        WHERE
            email = #{email}
          AND schedule_id = #{scheduleId}
    </select>

    <select id="getPlaceToVoteList">
        SELECT
            ptv.place_to_vote_id,
            ptv.place_name,
            ptv.lat,
            ptv.lng,
            NVL(pv.voted_count, 0) AS voted_count,
            (
                SELECT COUNT(*)
                FROM place_voted
                WHERE place_voted.email = #{email}
                      AND place_voted.place_to_vote_id = ptv.place_to_vote_id
            ) AS didRequesterVoteHere
        FROM
            place_to_vote ptv
            LEFT JOIN (
                SELECT place_to_vote_id, COUNT(*) AS voted_count
                FROM place_voted
                WHERE schedule_id = #{scheduleId}
                GROUP BY place_to_vote_id
            ) pv ON ptv.place_to_vote_id = pv.place_to_vote_id
        WHERE ptv.schedule_id = #{scheduleId}
        ORDER BY voted_count DESC
    </select>

    <select id="getVotingScheduleMemberList">
        SELECT
            m.email,
            m.name,
            m.address,
            m.img_src,
            ms.is_owner,
            dp.place_name AS departure_place_name,
            dp.lat,
            dp.lng
        FROM
            member m
            JOIN member_schedule ms ON m.email = ms.email
            LEFT JOIN departure_place dp ON ms.email = dp.email AND ms.schedule_id = dp.schedule_id
        WHERE ms.schedule_id = #{scheduleId}
        ORDER BY ms.is_owner DESC
    </select>

    <select id="isExistVotingSchedule">
        SELECT COUNT(*)
        FROM
            schedule s
            LEFT JOIN schedule_place sp ON s.schedule_id = sp.schedule_id
        WHERE
            s.schedule_id = #{scheduleId}
            AND s.is_group = 1
            AND sp.schedule_id IS NULL
    </select>

    <select id="isDuplicatePlaceToVote">
        SELECT COUNT(*)
        FROM place_to_vote
        WHERE
            schedule_id = #{scheduleId}
            AND place_name = #{dto.placeName}
            AND lat = #{dto.lat}
            AND lng = #{dto.lng}
    </select>

    <insert id="addPlaceToVote">
        INSERT INTO place_to_vote
            (
             place_to_vote_id,
             schedule_id,
             place_name,
             lat,
             lng
             )
        VALUES
            (
             seq_place_to_vote.NEXTVAL,
             #{scheduleId},
             #{dto.placeName},
             #{dto.lat},
             #{dto.lng}
             )
    </insert>

    <select id="isExistPlaceToVote">
        SELECT COUNT(*)
        FROM place_to_vote
        WHERE
            place_to_vote_id = #{placeToVoteId}
    </select>

    <select id="isExistPlaceVoted">
        SELECT COUNT(*)
        FROM place_voted
        WHERE
            email = #{email}
            AND place_to_vote_id = #{placeToVoteId}
    </select>

    <delete id="deletePlaceVoted">
        DELETE FROM place_voted
        WHERE
            email = #{email}
            AND place_to_vote_id = #{placeToVoteId}
    </delete>

    <insert id="createPlaceVoted">
        INSERT INTO place_voted
        (
         place_voted_id,
         email,
         schedule_id,
         place_to_vote_id
        )
        VALUES
        (
         seq_place_voted.NEXTVAL,
         #{email},
         (SELECT schedule_id
          FROM place_to_vote
          WHERE place_to_vote_id = #{placeToVoteId}),
         #{placeToVoteId}
        )
    </insert>

    <select id="getScheduleIdByPlaceToVoteId">
        SELECT schedule_id
        FROM place_to_vote
        WHERE place_to_vote_id = #{placeToVoteId}
    </select>

    <select id="isExistDeparturePlace">
        SELECT COUNT(*)
        FROM departure_place
        WHERE email = #{email}
        AND schedule_id =#{scheduleId}
    </select>

    <insert id="createDeparturePlace">
        INSERT INTO departure_place
        (email, schedule_id, place_name, lat, lng)
        VALUES
        (
         #{email},
         #{scheduleId},
         #{dto.placeName},
         #{dto.lat},
         #{dto.lng}
        )
    </insert>

    <update id="updateDeparturePlace">
        UPDATE departure_place
        SET
            place_name = #{dto.placeName},
            lat = #{dto.lat},
            lng = #{dto.lng}
        WHERE
            email = #{email}
            AND schedule_id = #{scheduleId}
    </update>

    <delete id="deleteDeparturePlace">
        DELETE FROM departure_place
        WHERE
            email = #{email}
            AND schedule_id = #{scheduleId}
    </delete>

    <insert id="confirmPlace">
        INSERT INTO schedule_place (schedule_id, place_name, lat, lng)
        SELECT schedule_id, place_name, lat, lng
        FROM place_to_vote
        WHERE place_to_vote_id = #{placeToVoteId}
    </insert>
</mapper>