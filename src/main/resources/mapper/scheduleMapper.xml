<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="today.meevote.domain.schedule.dao.ScheduleDao">

	<select id="isExistByEmail" resultType="boolean">
        SELECT COUNT(*) 
        FROM member 
        WHERE email = #{email}
    </select>
    
    <select id="isCategoryExist" resultType="boolean">
	    SELECT COUNT(*)
		FROM schedule_category
		WHERE schedule_category_id =#{categoryId}
	</select>


	<insert id="createPersonalSchedule" parameterType="map">
	    <selectKey keyProperty="id" resultType="long" order="BEFORE">
	        SELECT seq_schedule.NEXTVAL FROM DUAL
	    </selectKey>
	    INSERT INTO Schedule (
	        schedule_id,
	        name,
	        description,
	        is_group,
	        schedule_category_id,
	        start_date,
	        end_date
	    ) VALUES (
	        #{id},
	        #{dto.name},
	        #{dto.description, jdbcType=VARCHAR},
	        0,
	        #{dto.scheduleCategoryId},
	        TO_DATE(#{dto.startDate}, 'YYYY-MM-DD HH24:MI'),
	        TO_DATE(#{dto.endDate}, 'YYYY-MM-DD HH24:MI')
	    )
	</insert>

    
    <insert id="createMemberSchedule" parameterType="map">
        INSERT INTO member_schedule (
            email,
            schedule_id,
            is_owner
        ) VALUES (
            #{email},
            #{scheduleId},
            1 <!-- isOwner : 1로 설정 -->
        )
    </insert>
    
    <select id="isExistScheduleByInfo" resultType="boolean">
	    SELECT COUNT(*)
		FROM member_schedule
		WHERE email = #{email} AND schedule_id = #{scheduleId} AND is_owner = 1
	</select>
	
	<delete id="deleteMemberSchedule" parameterType="long">
	    DELETE FROM member_schedule
	    WHERE schedule_id = #{scheduleId}
	</delete>
	
	<delete id="deletePersonalSchedule" parameterType="long">
	    DELETE FROM schedule
	    WHERE schedule_id = #{scheduleId}
	</delete>


	<select id="getMyScheduleList" resultType="today.meevote.domain.schedule.dto.response.GetMyScheduleListDto">
		SELECT
			s.schedule_id AS scheduleId,
			s.name,
			c.schedule_category_id AS scheduleCategoryId,
			c.category_name AS categoryName,
			c.color AS color,
			s.is_group AS isGroup,
			TO_CHAR(s.start_date, 'YYYY-MM-DD HH24:MI') AS startDate,
			TO_CHAR(s.end_date, 'YYYY-MM-DD HH24:MI') AS endDate,
			p.place_name AS placeName
		FROM
			member_schedule ms
		JOIN schedule s ON ms.schedule_id = s.schedule_id
		JOIN schedule_category c ON s.schedule_category_id = c.schedule_category_id
		LEFT OUTER JOIN schedule_place p ON ms.schedule_id = p.schedule_id
		WHERE
			ms.email = #{email}
			<if test="isGroup != null">
				AND s.is_group = #{isGroup}
			</if>
		AND TO_CHAR(s.start_date, 'YYYY') = #{year}
		AND TO_CHAR(s.start_date, 'MM') = #{month}
		AND ((s.is_group = 1 AND p.schedule_id IS NOT NULL) OR s.is_group = 0)
	</select>

	<select id="getCategory" resultType="today.meevote.domain.schedule.dto.response.GetScheduleCategoryDto">
		SELECT
			schedule_category_id,
			category_name,
			color
		FROM schedule_category
	</select>

	<insert id="createSchedulePlace" parameterType="map">
		INSERT INTO schedule_place
		(
			schedule_id,
			place_name,
		   	lat,
		    lng
		)
		VALUES
		(
			#{id},
		 	#{dto.placeName},
		 	#{dto.placeLatitude},
		 	#{dto.placeLongitude}
		)
	</insert>
</mapper>